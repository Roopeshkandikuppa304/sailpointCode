<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="MHP SAPHRBuildMapRule" type="Validation">
          
    
    <Description> This rule detects start date and end date. </Description>
          
    
    <Source><![CDATA[     
  import java.util.HashMap;
  import org.json.JSONArray;  
  import org.json.JSONObject; 
  import java.text.SimpleDateFormat;
  import java.util.ArrayList;
  import java.util.List;
  import sailpoint.tools.JSONDeserializerFactory;
  import com.sap.conn.jco.JCoDestination;
  import com.sap.conn.jco.JCoException;
  import com.sap.conn.jco.JCoFunction;
  import org.apache.log4j.Logger;
  import org.apache.log4j.Level;
  import java.text.DateFormat;
  import java.text.SimpleDateFormat;
  import java.util.Date;
  /* Logger log = Logger.getLogger("rule.mhp.SAPHRBuildMapRule");
  String ruleName = "MHP SAPHRBuildMapRule";

  if(log.isDebugEnabled()) ("***RUNNING RULE [ " + ruleName +" ] ");*/
  Map object = new HashMap();
  String jsonString = "{ \"Actions\": [{ \"ActionTypeCode\" : \"C1\", \"ActionTypeName\": \"Einstellung\", \"ReasonCode\" : \"\", \"ReasonTypeText\": \"\", \"ActionStartDate\" : \"2022-06-27\", \"ActionEndDate\" : \"2023-02-03\" } ,{ \"ActionTypeCode\" : \"C8\", \"ActionTypeName\": \"Austritt\", \"ReasonCode\" : \"\", \"ReasonTypeText\": \"\", \"ActionStartDate\" : \"2023-01-04\", \"ActionEndDate\" : \"2023-09-07\" } ,{ \"ActionTypeCode\" : \"C8\", \"ActionTypeName\": \"Austritt\", \"ReasonCode\" : \"02\", \"ReasonTypeText\": \"Ablauf Befristung\", \"ActionStartDate\" : \"2023-03-09\", \"ActionEndDate\" : \"9999-12-31\" } ,{ \"ActionTypeCode\" : \"C8\", \"ActionTypeName\": \"Austritt\", \"ReasonCode\" : \"\", \"ReasonTypeText\": \"\", \"ActionStartDate\" : \"2023-02-04\", \"ActionEndDate\" : \"2023-04-07\" } ,{ \"ActionTypeCode\" : \"C9\", \"ActionTypeName\": \"Wiedereintritt in Unternehmen\", \"ReasonCode\" : \"\", \"ReasonTypeText\": \"\", \"ActionStartDate\" : \"2023-02-08\", \"ActionEndDate\" : \"2023-03-08\" } ,{ \"ActionTypeCode\" : \"C9\", \"ActionTypeName\": \"Wiedereintritt in Unternehmen\", \"ReasonCode\" : \"\", \"ReasonTypeText\": \"\", \"ActionStartDate\" : \"2023-01-10\", \"ActionEndDate\" : \"2023-04-08\" }  ] }";
  ArrayList tempList = null;
  ArrayList actionEndDateList = new ArrayList();
  ArrayList actionRejoinDateList = new ArrayList();
  //ArrayList actionCodeStringList = (ArrayList) jsnobject;
  String actionStartDateString = null;
  String finalEndDateString = null;
  String finalRejoinDateString = null;
  String actionRejoinDateString = null;
  String innerMapActionStr = null;
  String innerMapActionTypeStr = null;
  HashMap innerMap = null;
  String actionEndDate = null;
  
  SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

  if(log.isDebugEnabled()) ("***Printing actionCodeStringList "+actionCodeStringList);

  // if (null != actionCodeStringList && actionCodeStringList.size() != 0) {
  //for (int i = 0; i < actionCodeStringList.size(); i++) {
  String Infotype0000JSONStr = (String) (jsonString);
  System.out.println("Infotype0000JSONStr---"+Infotype0000JSONStr);
  HashMap inputMap = JSONDeserializerFactory.deserialize(HashMap.class, Infotype0000JSONStr);
  System.out.println("inputMap---"+inputMap);
  tempList = (ArrayList) inputMap.get("Actions");
  for (int x = 0; x < tempList.size(); x++) {
    innerMap = (HashMap) tempList.get(x);
    innerMapActionStr = (String) innerMap.get("ActionTypeCode");
    if(innerMapActionStr != null && innerMapActionStr.equalsIgnoreCase("C1")) {
      actionStartDateString = (String) innerMap.get("ActionStartDate");
      if (actionStartDateString != null) {
        object.put("StartDate", actionStartDateString);
      }
    }

    if(innerMapActionStr != null && innerMapActionStr.equalsIgnoreCase("C8")) {
      actionEndDate = (String) innerMap.get("ActionEndDate");
      Date date = sdf.parse(actionEndDate);
      Date todayDate = new Date();
      if(date != null && sailpoint.tools.Util.isDateAfter(date,todayDate)){
      	String startDate = (String) innerMap.get("ActionStartDate");
        Date date = sdf.parse(startDate);
        actionEndDateList.add(date);
      }
    }

    if(innerMapActionStr != null && innerMapActionStr.equalsIgnoreCase("C9")) {
      actionRejoinDateString = (String) innerMap.get("ActionEndDate");
      Date dte = sdf.parse(actionRejoinDateString);
      Date todayDate = new Date();
      if(sailpoint.tools.Util.isDateAfter(dte,todayDate)){
        String startDate = (String) innerMap.get("ActionStartDate");
        Date date = sdf.parse(startDate);
      	actionRejoinDateList.add(date);
      }
    }
  }

  if(actionEndDateList != null &&actionEndDateList.size() > 0){
    Collections.sort(actionEndDateList);
    finalEndDateString = (String) sdf.format(actionEndDateList.get(0));
     object.put("EndDate", finalEndDateString);
  }
 
  if(actionRejoinDateList != null && actionRejoinDateList.size() > 0){
    Collections.sort(actionRejoinDateList);
    finalRejoinDateString = (String) sdf.format(actionRejoinDateList.get(0));
    object.put("RejoinDate", finalRejoinDateString);
  } 
  // }
  //}
  return object;

  ]]></Source>
        

</Rule>
