<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Webservice=2 after operation rule" type="WebServiceAfterOperationRule">
          
    
    <Description>The Web Services connector will call this rule after performing ANY defined operation. This rule can be used to update the parsed resource object and/or add persistent values to the application's data.
(See information about what to return for more information)</Description>
          
    
    <Signature returnType="Object">
                    
        
        <Inputs>
                              
            
            <Argument name="log">
                                        
                
                <Description>
          The log object associated with the SailPointContext.
        </Description>
                                      
            
            </Argument>
                              
            
            <Argument name="context">
                                        
                
                <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
                                      
            
            </Argument>
                              
            
            <Argument name="application">
                                        
                
                <Description>The application whose data file is being processed.</Description>
                                      
            
            </Argument>
                              
            
            <Argument name="requestEndPoint">
                                        
                
                <Description>The current request information contain header, body ,response object</Description>
                                      
            
            </Argument>
                              
            
            <Argument name="processedResponseObject">
                                        
                
                <Description>Response Object processed by the Web services connector</Description>
                                      
            
            </Argument>
                              
            
            <Argument name="rawResponseObject">
                                        
                
                <Description>Response Object returned from the end system</Description>
                                      
            
            </Argument>
                              
            
            <Argument name="restClient">
                                        
                
                <Description>REST Client Object</Description>
                                      
            
            </Argument>
                            
        
        </Inputs>
                    
        
        <Returns>
                              
            
            <Argument name="Map">
                                        
                
                <Description>A newly created map containing a 'data' key and optionally, a 'connectorStateMap' key.  The 'data' value should be set to a map containing a parsed list of accounts/groups.  
          The 'connectorStateMap' value can be set to a map containing values that will be persisted to the application definition.
        </Description>
                                      
            
            </Argument>
                            
        
        </Returns>
                  
    
    </Signature>
          
    
    <Source><![CDATA[import net.minidev.json.JSONObject;
  import net.minidev.json.parser.JSONParser;

  Integer fetchedRecordsCount = 0;
  if(null != rawResponseObject && null != processedResponseObject){
    log.error("======After Rule : rawResponseObject= "+rawResponseObject+" =======processedResponseObject: "+processedResponseObject);
    fetchedRecordsCount = ((List) processedResponseObject).size();
    log.error("=====After rule :fetchedRecordsCount "+fetchedRecordsCount);

    JSONParser parser = new JSONParser(JSONParser.MODE_JSON_SIMPLE);
    JSONObject json = (JSONObject) parser.parse(rawResponseObject.toString());

    int totalPages = (int) json.get("total_pages");
    int currentPage = (int) json.get("page");
    URL url = new URL(requestEndPoint.getFullUrl());
    log.error("=====After rule :requestEndPoint Full Url=== "+url);

    boolean hasMore = false;
    if(currentPage < totalPages){
      hasMore = true;
    }

    Map transientValues = application.getAttributeValue("transientValues");
    log.error("=====After rule===Map transientValues==="+transientValues);
    if(transientValues == null){
      transientValues = new HashMap();
      application.setAttribute("transientValues",transientValues);
    }
    transientValues.put("hasMore",hasMore);
    if(hasMore){
      transientValues.put("nextPage",currentPage + 1);
    }
  }
  log.error("=========after rule ends====");]]></Source>
        

</Rule>
