<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="ApprovalAssignmentExample" significantModified="1711706044641" type="ApprovalAssignment">
          
    
    <Signature returnType="null">
                    
        
        <Inputs>
                              
            
            <Argument type="log">
                                        
                
                <Description>

          The log object associated with the SailPointContext.

        </Description>
                                      
            
            </Argument>
                              
            
            <Argument type="context">
                                        
                
                <Description>

          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.

        </Description>
                                      
            
            </Argument>
                              
            
            <Argument type="approvals">
                                        
                
                <Description>

          List of approvals generated by the approvalScheme, maybe null if there were no

          approvals enabled.

        </Description>
                                      
            
            </Argument>
                              
            
            <Argument type="approvalSet">
                                        
                
                <Description>

          Representation of the cart, also found on the approvals generated by the

          default schemes.

        </Description>
                                      
            
            </Argument>
                            
        
        </Inputs>
                    
        
        <Returns>
                              
            
            <Argument type="newApprovals">
                                        
                
                <Description>

          Return a lIst of Workflow.Approval objects that should be included

          during the approval process.

        </Description>
                                      
            
            </Argument>
                            
        
        </Returns>
                  
    
    </Signature>
          
    
    <Source><![CDATA[
  import sailpoint.object.Filter;
  import sailpoint.api.*;
  System.out.println("Import- ManagedAttributer 1");

  import sailpoint.object.Application;
  System.out.println("Imports start 2");

  import sailpoint.object.ApprovalSet;
  System.out.println("Imports start 3");


  import sailpoint.object.ApprovalItem;
  System.out.println("Imports start 4");


  import sailpoint.object.Identity;
  System.out.println("Imports start 5");


  import sailpoint.object.ManagedAttribute;
  System.out.println("Imports start 6");


  import sailpoint.object.Workflow.Approval;
  System.out.println("Imports start 7");


  import sailpoint.object.Workflow.Arg;
  System.out.println("Imports start 8");


  import sailpoint.tools.xml.XMLObjectFactory;
  System.out.println("Imports start 9");


  import sailpoint.workflow.IdentityApprovalGenerator;
  System.out.println("Imports start 10");


  System.out.println("Approval Assignment Rule starts..............................");

  List newApprovals = new ArrayList();

  String managerName = null;
  System.out.println("Approval Assignment Rule starts- manager of manager value assigned as null");

  Identity identityObj = context.getObjectByName(Identity.class, identityName);
  System.out.println("Approval Assignment Rule- fetching identity....and identity is: ");
  System.out.println("Approval Assignment Rule "+identityObj.getDisplayName());

  Identity manager = identityObj.getManager();

  System.out.println("Approval Assignment Rule Get manager : ");
  System.out.println("Manager Id: "+manager);

  if (null != manager) {

    managerName = manager.getName();

  }



  System.out.println("Approval Assignment Rule- manager name:  "+managerName);

  if (null == managerName) {

    // If the manager doesn't have a manager use the fallback approver

    managerName = fallbackApprover;

  }

  Map approvalMap = new HashMap();

  System.out.println("Approval Assignment Rule fallbackApprover: "+managerName);

  // Iterate through the ApprovalItems and generate a new ApprovalSet for this approval

  for (ApprovalItem item : approvalSet.getItems()) {
    String itemOwner = "";

    if(item.getApplicationName() != null && item.getApplicationName().equals("JDBC")){
      Filter f = Filter.and(Filter.eq("displayName",item.getDisplayValue()),Filter.eq("attribute","GroupId"));
      ManagedAttribute mat = context.getUniqueObject(ManagedAttribute.class, f);
      if(mat.getOwner() == null){
        item.setOwner("spadmin");
      }else{
        item.setOwner(mat.getOwner().getName());
      }

      itemOwner = item.getOwner();;
    }

    if (! item.isRejected()) {

      String secondaryApproval = "";

      String itemAppName = item.getApplicationName();

      String itemName = item.getName();

      String itemValue,itemDisplayName;

      Object itemValueObj =  item.getValue();

      System.out.println("Approval Application NAME: "+itemAppName);
      System.out.println("Approval Rule item name: "+itemName);

      System.out.println("Approval item value Object: "+itemValueObj);
      // Multi-value check

      if (itemValueObj instanceof String)

        itemValue = (String) itemValueObj;

      else

        itemValue = itemValueObj.get(0);      

      if (null != itemAppName) {

        itemDisplayName = item.getDisplayName();



        if(null != itemAppName) {

          // Check whether the item needs secondary approval

          Application app = context.getObjectByName(Application.class, itemAppName);
          System.out.println("Approval Assignment Rule app object name: "+app);

          ManagedAttribute ma = ManagedAttributer.get(context, app, itemName, itemValue);
          System.out.println("Approval managed Attribute: : "+ma);

          secondaryApproval = ma.getAttribute("Approver");
          System.out.println("Approval extended att name: "+secondaryApproval);

        }


        // secondaryApproval in MangedAttributeExtended ......as extended attribute 
        System.out.println("Working fine upto build approval map ");

        if (null != secondaryApproval) {

          // Build approval map of approver to ApprovalSet

          ApprovalSet newSet1 = approvalMap.get(managerName);
          System.out.println("Working fine upto build approval map done successfully ");

          if (newSet1 == null) {

            newSet1 = new ApprovalSet();

          }
          System.out.println("Working fine upto build approval map upto value newSet1...");

          newSet1.add(XMLObjectFactory.getInstance().clone(item, context));

          approvalMap.put(managerName, newSet1);

        } 
        if(secondaryApproval.equals("owner")){

          // Build approval map of approver to ApprovalSet

          ApprovalSet newSet3 = approvalMap.get(itemOwner);
          System.out.println("Working fine upto build approval map done successfully ");

          if (newSet3 == null) {

            newSet3 = new ApprovalSet();

          }
          System.out.println("Working fine upto build approval map upto value newSet2...");

          newSet3.add(XMLObjectFactory.getInstance().clone(item, context));

          approvalMap.put(itemOwner, newSet3);

        }

        if(secondaryApproval.equals("manager,owner")){

          // Build approval map of approver to ApprovalSet

          System.out.println("Inside if ....on condition of manager,owner approval............");
          ApprovalSet newSet4 = approvalMap.get(itemOwner);

          System.out.println("Working fine upto build approval map done successfully ");

          if (newSet4 == null) {

            newSet4 = new ApprovalSet();

          }
          System.out.println("Working fine upto build approval map upto value newSet4...");

          newSet4.add(XMLObjectFactory.getInstance().clone(item, context));

          approvalMap.put(itemOwner, newSet4);

        }

      }

    }

  }


  // Generate the approval list from the approval map

  IdentityApprovalGenerator iag = new IdentityApprovalGenerator(wfcontext);

  newApprovals = iag.buildApprovalsFromMap(approvalMap, "Approver");  // Second argument is used in the work item description

  System.out.println("Ending : ---->"+approvalMap);
  System.out.println("Ending : ---->"+newApprovals);
  return newApprovals;
  ]]></Source>
        

</Rule>
